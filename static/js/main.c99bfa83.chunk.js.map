{"version":3,"sources":["icons/thumbsup.svg","icons/thumbdown.svg","components/MyLandingPage.js","index.js"],"names":["module","exports","MyLandingPage","ideas","setIdeas","useState","newIdea","setNewIdea","useEffect","fetchIdeas","async","sortedIdeas","axios","get","data","sort","a","b","upvotes","error","console","React","createElement","className","TransitionGroup","component","map","idea","CSSTransition","key","id","timeout","classNames","text","onClick","response","patch","prevIdeas","handleUpvote","src","upvoteIcon","alt","handleDownvote","downvoteIcon","downvotes","onSubmit","event","preventDefault","post","type","value","onChange","target","placeholder","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c99bfa83.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/thumbsup.c4025882.svg\";","module.exports = __webpack_public_path__ + \"static/media/thumbdown.d367c773.svg\";","import React, { useState, useEffect } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport '../App.css';\nimport upvoteIcon from '../icons/thumbsup.svg';\nimport downvoteIcon from '../icons/thumbdown.svg';\nimport axios from 'axios';\n\nconst MyLandingPage = () => {\n  const [ideas, setIdeas] = useState([]);\n  const [newIdea, setNewIdea] = useState('');\n\n  useEffect(() => {\n    fetchIdeas();\n  }, []);\n\n  const fetchIdeas = async () => {\n    try {\n      const response = await axios.get('https://startup-upvote-fa7d8216f031.herokuapp.com/ideas');\n      // Sort the fetched ideas by upvotes before setting the state\n      const sortedIdeas = response.data.sort((a, b) => b.upvotes - a.upvotes);\n      setIdeas(sortedIdeas);\n    } catch (error) {\n      console.error('Error fetching ideas:', error);\n    }\n  };\n\n  const handleUpvote = async (id) => {\n    try {\n      const response = await axios.patch(`https://startup-upvote-fa7d8216f031.herokuapp.com/ideas/${id}/upvote`);\n      setIdeas(prevIdeas => {\n        // Update the idea in the array\n        const updatedIdeas = prevIdeas.map(idea => \n          idea.id === id ? { ...idea, ...response.data } : idea\n        );\n        // Sort the updated array based on upvotes\n        return [...updatedIdeas].sort((a, b) => b.upvotes - a.upvotes);\n      });\n    } catch (error) {\n      console.error('Error upvoting idea:', error);\n    }\n  };\n\n  const handleDownvote = async (id) => {\n    try {\n      const response = await axios.patch(`https://startup-upvote-fa7d8216f031.herokuapp.com/ideas/${id}/downvote`);\n      setIdeas(prevIdeas => {\n        // Update the idea in the array\n        const updatedIdeas = prevIdeas.map(idea => \n          idea.id === id ? { ...idea, ...response.data } : idea\n        );\n        // Sort the updated array based on upvotes\n        return [...updatedIdeas].sort((a, b) => b.upvotes - a.upvotes);\n      });\n    } catch (error) {\n      console.error('Error downvoting idea:', error);\n    }\n  };\n\n  const handleNewIdeaChange = (event) => {\n    setNewIdea(event.target.value);\n  };\n\n  const handleNewIdeaSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const response = await axios.post('https://startup-upvote-fa7d8216f031.herokuapp.com/ideas', { text: newIdea });\n      setIdeas(prevIdeas => {\n        const newIdeas = [...prevIdeas, response.data];\n        // Sort the new array based on upvotes\n        return newIdeas.sort((a, b) => b.upvotes - a.upvotes);\n      });\n      setNewIdea('');\n    } catch (error) {\n      console.error('Error submitting new idea:', error);\n    }\n  };\n\n  return (\n    <div className=\"landing-page\">\n      <div className=\"container\">\n        <h1>Share, Vote, Create</h1>\n        <div className=\"table-container translucent-table\">\n          <table className=\"ideas-table\">\n            <thead>\n              <tr>\n                <th>Top trending ideas</th>\n                <th>Votes</th>\n              </tr>\n            </thead>\n            <tbody>\n              <TransitionGroup component={null}>\n                {ideas.map((idea) => (\n                  <CSSTransition\n                    key={idea.id}\n                    timeout={1000}  // Adjust the timeout as needed\n                    classNames=\"slide\"\n                  >\n                    <tr>\n                      <td>{idea.text}</td>\n                      <td>\n                        <div className=\"vote-buttons\">\n                          <button onClick={() => handleUpvote(idea.id)} className=\"vote-button\">\n                            <img src={upvoteIcon} alt=\"Upvote\" className=\"vote-icon\" />\n                            <span className=\"vote-count\">{idea.upvotes}</span>\n                          </button>\n                          <button onClick={() => handleDownvote(idea.id)} className=\"vote-button\">\n                            <img src={downvoteIcon} alt=\"Downvote\" className=\"vote-icon\" />\n                            <span className=\"vote-count\">{idea.downvotes}</span>\n                          </button>\n                        </div>\n                      </td>\n                    </tr>\n                  </CSSTransition>\n                ))}\n              </TransitionGroup>\n            </tbody>\n          </table>\n        </div>\n        <form onSubmit={handleNewIdeaSubmit} className=\"new-idea-form translucent-form\">\n          <input\n            type=\"text\"\n            value={newIdea}\n            onChange={handleNewIdeaChange}\n            placeholder=\"Submit your idea\"\n          />\n          <button type=\"submit\" className=\"submit-button\">Submit Your Idea</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default MyLandingPage;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport MyLandingPage from './components/MyLandingPage';\nimport './App.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <MyLandingPage />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}